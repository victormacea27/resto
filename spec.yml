swagger: "2.0"
info:
  description: "Esta API permite gestionar los pedidos de productos de comida, ademas permite el registro de usuarios, y la administración de los pedidos"
  version: "1.0.0"
  title: "Delilah Resto"
host: "localhost:8000"
tags:
- name: "Usuarios"
  description: "Request de Usuarios"
- name: "Productos"
  description: "Request de Productos"
- name: "Pedidos"
  description: "Request de Pedidos"
schemes:
- "http"
paths:
  /crearProducto:
    post:
      tags:
      - "Productos"
      summary: "Crear nuevos productos"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman"
      operationId: "agregarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token Bearer"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Request con el cual se creara el nuevo producto"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "405":
          description: "Entrada inválida"
        "500":
          description: "Error interno del servidor"
        "200":
          description: "Producto creado"
  /modificarProducto:
    put:
      tags:
      - "Productos"
      summary: "Modificar un producto"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman y se requiere el id del producto para la modificación"
      operationId: "actualizarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token Bearer"
        in: "header"
        required: true
        type: "string"
      - in: "query"
        name: "id_producto"
        required: true
        type: "integer"
        description: "ID que identifica el producto a modificar"
      - in: "body"
        name: "body"
        description: "Request con los datos para modificar"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "200":
          description: "Producto modificado correctamente"
        "404":
          description: "Producto no encontrado"
        "405":
          description: "Se presento una excepción de validación"
        "500":
          description: "Error interno del servidor"
  /eliminarProducto:
    delete:
      tags:
      - "Productos"
      summary: "Eliminar un producto"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman y se requiere el id del producto para la eliminación"
      operationId: "eliminarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "token Bearer"
          in: "header"
          required: true
          type: "string"
        - in: "query"
          name: "id"
          required: true
          type: "integer"
          description: "ID que identifica el producto a eliminar"
      responses:
        "200":
          description: "id del producto eliminado:"
        "404":
          description: "El producto no existe, valida el id"
        "500":
          description: "Error interno del servidor"
  /productos:
    get:
      tags:
      - "Productos"
      summary: "Consulta de productos"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman"
      operationId: "consultaProductos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "token Bearer"
          in: "header"
          required: true
          type: "string"
      responses:
        "200":
          description: "Consulta de productos realizada"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Producto"
        "500":
          description: "Error interno del servidor"
  /pedidoNuevo:
    post:
      tags:
      - "Pedidos"
      summary: "Crear nuevo pedido"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman"
      operationId: "agregarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token Bearer"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Request para crear nuevos productos"
        required: true
        schema:
          $ref: "#/definitions/PedidoCrear"
      responses:
        "200":
          description: "Pedido nuevo creado"
        "500":
          description: "Error interno del servidor"
  /modificarPedido:
    put:
      tags:
      - "Pedidos"
      summary: "Modificar un pedido"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman y se requiere el id del producto para la modificación"
      operationId: "actualizarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token Bearer"
        in: "header"
        required: true
        type: "string"
      - in: "query"
        name: "id_pedido"
        required: true
        type: "integer"
        description: "ID que identifica el pedido a modificar"
      - in: "body"
        name: "body"
        description: "Request con los datos de pedido a modificar"
        required: true
        schema:
          $ref: "#/definitions/PedidoModifcar"
      responses:
        "200":
          description: "Pedido modificado correctamente"
          schema:
           $ref: '#/definitions/Pedido'
        "404":
          description: "Pedido no encontrado"
        "500":
          description: "Error interno del servidor"  
  /pedidos:
    get:
      tags:
      - "Pedidos"
      summary: "Consulta de pedidos"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman"
      operationId: "consultarPedidos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token Bearer"
        in: "header"
        required: true
        type: "string"
      responses:
        "200":
          description: "Pedidos consultados realizada"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/Pedido"
        "500":
          description: "Error interno del servidor"
  /eliminarpedidos:
    delete:
      tags:
      - "Pedidos"
      summary: "Eliminar un pedido"
      description: "Se requiere enviar token de autorización en Authorization o en los headers de postman y se requiere el id del producto para la eliminación"
      operationId: "eliminarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "token Bearer"
          in: "header"
          required: true
          type: "string"
        - in: "query"
          name: "id"
          required: true
          type: "integer"
          description: "ID que identifica el pedido a eliminar"
      responses:
        "200":
          description: "id del pedido eliminado:"
        "404":
          description: "El pedido no existe, valida el id"
        "500":
          description: "Error interno del servidor"
  /crearUsuario:
    post:
      tags:
      - "Usuarios"
      summary: "Crear nuevo usuario"
      description: ""
      operationId: "agregarUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Request para crear un nuevo usuario"
        required: true
        schema:
          $ref: "#/definitions/Usuario"
      responses:
        "405":
          description: "Entrada inválida"
        "200":
          description: "Usuario nuevo creado"
        "500":
          description: "Error interno del servidor"
  /login:
    post:
      tags:
      - "Usuarios"
      summary: "Ingreso de usuario"
      description: ""
      operationId: "loginUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Request para ingresar"
        required: true
        schema:
          $ref: "#/definitions/Login"
      responses:
        "401":
          description: "Usuario no registrado"
        "404":
          description: "datos de acceso inválidos"
        "200":
          description: "Acceso a usuario correcto"
        "500":
          description: "Error interno del servidor"    
definitions:
  Producto:
    type: "object"
    properties:
      nombre:
        type: "string"
      precio:
        type: "integer"
        format: "int64"
      nombre_corto:
        type: "string"
      ruta:
        type: "string"
      favorito:
        type: "boolean"
  Pedido:
    type: "object"
    properties:
      NroPedido:
        type: "integer"
        format: "int64"
        example: 7
      Estado:
        type: "string"
        format: "int64"
        example: "CONFIRMADO"
      Usuario:
        type: "string" 
        format: "int64"
        example: "victor Macea"
      FormaPago:
        type: "string" 
        format: "int64"
        example: "EFECTIVO"
      PagoTotal:
        type: "integer"
        format: "int64"
        example: 32
      DescripciónProductos:
        type: "string"
        format: "int64"
        example: "Hamburguesa,Pasta"
      FechaPedido:
        type: "string"
        format: "date-time"
  Detalleproductos:
      type: "object"
      properties:
        id_producto:
          type: "integer"
          format: "int64"
  PedidoCrear:
    type: "object"
    properties:
      id_tipopago:
        type: "integer"
        format: "int64"
      products:
        type: "array"
        xml:
          name: "product"
          wrapped: true
        items:
          $ref: '#/definitions/Detalleproductos'
  PedidoModifcar:
    type: "object"
    properties:
      id_estado:
        type: "integer"
        format: "int64"
  Usuario:
    type: "object"
    properties:
      usuario:
        type: "string"  
      nombre_completo:
        type: "string" 
      email:
        type: "string"
        format: "email"
      telefono:
        type: "string"        
      Direccion_envio:
        type: "string"
      contrasena:
        type: "string"
        format: "password"
      id_rol:
        type: "integer"
        format: "int64"
  Login:
    type: "object"
    properties:
      usuario:
        type: "string"
      contrasena:
        type: "string"
        format: "password"
externalDocs:
  description: "Find out more DelilahResto"
  url: "http://localhost:8000/" 